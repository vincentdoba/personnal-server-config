servers = (
  {
    address = "irc.freenode.net";
    chatnet = "freenode";
    port = "6667";
    use_ssl = "yes";
    ssl_verify = "no";
    autoconnect = "yes";
    no_proxy = "yes";
  },

);

chatnets = { freenode = { type = "IRC"; }; };

channels = (
  { name = "#br"; chatnet = "freenode"; autojoin = "no"; },
  { name = "#br2k7"; chatnet = "freenode"; autojoin = "no"; },
  { name = "#root-br"; chatnet = "freenode"; autojoin = "no"; },
  { name = "#x"; chatnet = "freenode"; autojoin = "no"; },
  { name = "#opers"; chatnet = "freenode"; autojoin = "no"; },
  { name = "#br-actif"; chatnet = "freenode"; autojoin = "no"; },
  { name = "#help"; chatnet = "freenode"; autojoin = "no"; },
  { name = "#cthulhu"; chatnet = "freenode"; autojoin = "no"; },
  { name = "#faerix"; chatnet = "freenode"; autojoin = "no"; },
  { name = "#services"; chatnet = "freenode"; autojoin = "no"; },
  { name = "#wheequi"; chatnet = "freenode"; autojoin = "no"; },

  { name = "#bisounours"; chatnet = "freenode"; autojoin = "no"; },
  { name = "#gentoo"; chatnet = "freenode"; autojoin = "no"; },
  { name = "#boulets"; chatnet = "freenode"; autojoin = "no"; },
  { name = "#poly.org"; chatnet = "freenode"; autojoin = "yes"; },
  {
    name = "#br-boulets";
    chatnet = "freenode";
    autojoin = "yes";

    aliases = {
      J = "join";
      WJOIN = "join -window";
      WQUERY = "query -window";
      LEAVE = "part";
      BYE = "quit";
      EXIT = "quit";
      SIGNOFF = "quit";
      DESCRIBE = "action";
      DATE = "time";
      HOST = "userhost";
      LAST = "lastlog";
      SAY = "msg *";
      WI = "whois";
      WII = "whois $0 $0";
      WW = "whowas";
      W = "who";
      N = "names";
      M = "msg";
      T = "topic";
      C = "clear";
      CL = "clear";
      K = "kick";
      KB = "kickban";
      KN = "knockout";
      BANS = "ban";
      B = "ban";
      MUB = "unban *";
      UB = "unban";
      IG = "ignore";
      UNIG = "unignore";
      SB = "scrollback";
      UMODE = "mode $N";
      WC = "window close";
      WN = "window new hide";
      SV = "say Irssi $J ($V) - http://irssi.org/";
      GOTO = "sb goto";
      CHAT = "dcc chat";
      RUN = "SCRIPT LOAD";
      UPTIME = "eval exec - expr `date +%s` - \\$F | awk '{print \"Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
      CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
      SBAR = "STATUSBAR";
      INVITELIST = "mode $C +I";
      Q = "QUERY";
      "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
      EXEMPTLIST = "mode $C +e";
      ATAG = "WINDOW SERVER";
    };

    statusbar = {
      # formats:
      # when using {templates}, the template is shown only if it's argument isn't
      # empty unless no argument is given. for example {sb} is printed always,
      # but {sb $T} is printed only if $T isn't empty.

      items = {
        # start/end text in statusbars
        barstart = "{sbstart}";
        barend = "{sbend}";

        topicbarstart = "{topicsbstart}";
        topicbarend = "{topicsbend}";

        # treated "normally", you could change the time/user name to whatever
        time = "{sb $Z}";
        user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

        # treated specially .. window is printed with non-empty windows,
        # window_empty is printed with empty windows
        window = "{sb $winref:$itemname{sbmode $M}}";
        window_empty = "{sb $winref{sbservertag $tag}}";
        prompt = "{prompt $[.15]itemname}";
        prompt_empty = "{prompt $winname}";
        topic = " $topic";
        topic_empty = " Irssi v$J - http://irssi.org/help/";

        # all of these treated specially, they're only displayed when needed
        lag = "{sb Lag: $0-}";
        act = "{sb Act: $0-}";
        more = "-- more --";
      };

      # there's two type of statusbars. root statusbars are either at the top
      # of the screen or at the bottom of the screen. window statusbars are at
      # the top/bottom of each split window in screen.
      default = {
        # the "default statusbar" to be displayed at the bottom of the window.
        # contains all the normal items.
        window = {
          disabled = "no";

          # window, root
          type = "window";
          # top, bottom
          placement = "bottom";
          # number
          position = "1";
          # active, inactive, always
          visible = "active";

          # list of items in statusbar in the display order
          items = {
            barstart = { priority = "100"; };
            time = { };
            user = { };
            window = { };
            window_empty = { };
            lag = { priority = "-1"; };
            more = { priority = "-1"; alignment = "right"; };
            barend = { priority = "100"; alignment = "right"; };
            usercount = { };
          };
        };

        # statusbar to use in inactive split windows
        window_inact = {
          type = "window";
          placement = "bottom";
          position = "1";
          visible = "inactive";
          items = {
            barstart = { priority = "100"; };
            window = { };
            window_empty = { };
            more = { priority = "-1"; alignment = "right"; };
            barend = { priority = "100"; alignment = "right"; };
          };
        };

        # we treat input line as yet another statusbar :) It's possible to
        # add other items before or after the input line item.
        prompt = {
          type = "root";
          placement = "bottom";
          # we want to be at the bottom always
          position = "100";
          visible = "always";
          items = {
            prompt = { priority = "-1"; };
            prompt_empty = { priority = "-1"; };
            # treated specially, this is the real input line.
            input = { priority = "10"; };
          };
        };

        # topicbar
        topic = {
          type = "root";
          placement = "top";
          position = "1";
          visible = "always";
          items = {
            topicbarstart = { priority = "100"; };
            topic = { };
            topic_empty = { };
            topicbarend = { priority = "100"; alignment = "right"; };
          };
        };
        awl_0 = {
          items = {
            barstart = { priority = "100"; };
            awl_0 = { };
            barend = { priority = "100"; alignment = "right"; };
          };
        };
      };
    };
    settings = {
      core = {
        real_name = "simon cruanes";
        user_name = "simon";
        nick = "SimCoin";
        recode = "yes";
        recode_autodetect_utf8 = "yes";
        recode_out_default_charset = "ISO8859-15";
        recode_fallback = "CP1252";
        server_reconnect_time = "10";
        quit_message = "oups, reboot inopin√© !";
        timestamp_format = "%H:%M:%S";
        use_proxy = "yes";
        proxy_address = "kuzh";
        proxy_port = "8080";
        proxy_string = "CONNECT %s:%d HTTP/1.0\012\012";
      };
      "fe-common/core" = {
        autolog = "yes";
        autolog_path = "/home/2007/simon/irclogs/%Y/$tag/$0/%m/%d.log";
        term_charset = "UTF-8";
        timestamps = "yes";
        show_nickmode = "yes";
        show_nickmode_empty = "yes";
        theme = "mytheme.theme";
        bell_beeps = "yes";
        beep_msg_level = "MSGS NOTICES DCC DCCMSGS HILIGHT";
        beep_when_window_active = "yes";
        beep_when_away = "yes";
      };
      "irc/core" = {
        lag_max_before_disconnect = "300";
        alternate_nick = "companion_square";
      };
      "fe-text" = { indent = "8"; actlist_sort = "refnum"; };
      "perl/core/scripts" = {
        autorejoin_channels = "#br #polytech #x #poly.org #root-br #br2k7";
        nicklist_automode = "screen";
        awl_display_nokey_active = "$Q:$H$C$S";
        awl_display_key = "$Q|$H$C$S";
        awl_display_key_active = "$Q:$H$C$S";
        awl_display_nokey = "$Q|$H$C$S";
      };
    };
    conversions = { FreeNode = "ISO-8859-1"; };
    hilights = (
      { text = "root"; nick = "yes"; word = "yes"; fullword = "no"; },
      {
        text = "CRIT";
        color = "%Y";
        nick = "no";
        word = "yes";
        fullword = "yes";
        channels = ( "#root-br" );
      },
      { text = "magnan"; nick = "yes"; word = "yes"; fullword = "yes"; },
      { text = "simon "; nick = "yes"; word = "yes"; },
      { text = "simon"; nick = "yes"; word = "yes"; }
    );
    logs = { };
    keyboard = (
      { key = "meta-a"; id = "change_window"; data = "1"; },
      { key = "meta-z"; id = "change_window"; data = "2"; },
      { key = "meta-e"; id = "change_window"; data = "3"; },
      { key = "meta-r"; id = "change_window"; data = "4"; },
      { key = "meta-t"; id = "change_window"; data = "5"; },
      { key = "meta-y"; id = "change_window"; data = "6"; },
      { key = "meta-u"; id = "change_window"; data = "7"; },
      { key = "meta-i"; id = "change_window"; data = "8"; },
      { key = "meta-o"; id = "change_window"; data = "9"; },
      { key = "meta-p"; id = "change_window"; data = "10"; },
      { key = "meta-q"; id = "change_window"; data = "11"; },
      { key = "meta-s"; id = "change_window"; data = "12"; },
      { key = "meta-d"; id = "change_window"; data = "13"; },
      { key = "meta-f"; id = "change_window"; data = "14"; },
      { key = "meta-g"; id = "change_window"; data = "15"; },
      { key = "meta-h"; id = "change_window"; data = "16"; },
      { key = "meta-j"; id = "change_window"; data = "17"; },
      { key = "meta-k"; id = "change_window"; data = "18"; },
      { key = "meta-l"; id = "change_window"; data = "19"; },
      { key = "meta-m"; id = "change_window"; data = "20"; },
      { key = "meta-w"; id = "change_window"; data = "21"; },
      { key = "meta-x"; id = "change_window"; data = "22"; },
      { key = "meta-c"; id = "change_window"; data = "23"; },
      { key = "meta-v"; id = "change_window"; data = "24"; },
      { key = "meta-b"; id = "change_window"; data = "25"; },
      { key = "meta-n"; id = "change_window"; data = "26"; }
    );
    windows = {
      1 = { immortal = "yes"; name = "(status)"; level = "ALL"; };
      2 = {
        items = (
          {
            type = "CHANNEL";
            chat_type = "IRC";
            name = "#br";
            tag = "freenode";
          }
        );
      };
      3 = {
        items = (
          {
            type = "CHANNEL";
            chat_type = "IRC";
            name = "#x";
            tag = "freenode";
          }
        );
      };
    };
    mainwindows = { 1 = { first_line = "2"; lines = "53"; }; };
  }
);
settings = {
  core = {
    real_name = "Unknown";
    user_name = "simon";
    nick = "SimCoin";
    log_timestamp = "%H:%M:%S";
    timestamp_format = "%H:%M:%S";
  };
  "fe-text" = { actlist_sort = "refnum"; };
};
statusbar = {
  default = {
    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
logs = { "/home/simon/.irclogs/%Y/%m/%d.log" = { level = "ALL"; }; };
hilights = (
  { text = "o<"; nick = "yes"; word = "yes"; },
  { text = "coin"; nick = "yes"; word = "yes"; },
  { text = "o< coin simon"; nick = "yes"; word = "yes"; },
  { 
    text = "simon o< coin 2k7 2007 boulet";
    nick = "yes";
    word = "yes";
  },
  { text = "netsplit"; nick = "yes"; word = "yes"; },
  { text = "garfunkel"; nick = "yes"; word = "yes"; },
  { text = "simon"; nick = "yes"; word = "yes"; },
  { text = "grenade"; nick = "yes"; word = "yes"; },
  { text = "KILL"; nick = "yes"; word = "yes"; },
  { text = "root"; nick = "yes"; word = "yes"; },
  { text = "2007 "; nick = "yes"; word = "yes"; },
  { text = "TOS"; nick = "yes"; word = "yes"; },
  { text = "tlm"; nick = "yes"; word = "yes"; },
  { text = "CRITICAL"; nick = "yes"; word = "yes"; },
  { text = "autiste"; nick = "yes"; word = "yes"; },
  { text = "r√©n√©gat"; nick = "yes"; word = "yes"; },
  { text = "B*I*S*O*U"; nick = "yes"; word = "yes"; },
  { text = "magnan"; nick = "yes"; word = "yes"; },
  { text = "glsa"; nick = "yes"; word = "yes"; }
);
keyboard = (
  { key = "meta-b"; id = "command"; data = "echo B*I*S*O*U*S"; }
);
